// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kaiachain/kaia/v2/datasync/chaindatafetcher (interfaces: ComponentSetter)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockComponentSetter is a mock of ComponentSetter interface
type MockComponentSetter struct {
	ctrl     *gomock.Controller
	recorder *MockComponentSetterMockRecorder
}

// MockComponentSetterMockRecorder is the mock recorder for MockComponentSetter
type MockComponentSetterMockRecorder struct {
	mock *MockComponentSetter
}

// NewMockComponentSetter creates a new mock instance
func NewMockComponentSetter(ctrl *gomock.Controller) *MockComponentSetter {
	mock := &MockComponentSetter{ctrl: ctrl}
	mock.recorder = &MockComponentSetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockComponentSetter) EXPECT() *MockComponentSetterMockRecorder {
	return m.recorder
}

// SetComponent mocks base method
func (m *MockComponentSetter) SetComponent(arg0 interface{}) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetComponent", arg0)
}

// SetComponent indicates an expected call of SetComponent
func (mr *MockComponentSetterMockRecorder) SetComponent(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetComponent", reflect.TypeOf((*MockComponentSetter)(nil).SetComponent), arg0)
}
