name: Package and Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'
    branches:
      - test/github-action

env:
  DOCKER_LOGIN: ${{ secrets.DOCKER_LOGIN }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  FRONTEND_BUCKET: ${{ secrets.FRONTEND_BUCKET }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  rpm-linux-amd64:
    runs-on: ubuntu-latest
    container:
      image: kaiachain/circleci-rpmbuild:1.23.7-gcc11

    steps:
      - uses: actions/checkout@v4
      
      - name: Set version
        run: |
          export GOPATH=/go
          if [[ $GITHUB_REF_NAME =~ ^v[0-9]+\.[0-9]+\.[0-9]+-rc\.[0-9]+.* ]]; then
            rc_num=$(echo $GITHUB_REF_NAME | cut -d '-' -f 2)
            sed 's/%d.%d.%d/%d.%d.%d~'$rc_num'/' params/version.go > params/version.go.tmp
            mv params/version.go.tmp params/version.go
          fi
          echo "KAIA_VERSION=$(go run build/rpm/main.go version)" >> $GITHUB_ENV

      - name: Build binaries
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          make all

      - name: Build RPM packages
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git config --system --add safe.directory $GITHUB_WORKSPACE
          for item in kcn kpn ken kgen kscn kbn kspn ksen homi; do
            ./build/package-rpm.sh $item
          done
          
          for item in kcn kpn ken; do
            ./build/package-rpm.sh -b $item
          done

      - name: Upload RPM packages to S3
        run: |
          PLATFORM_SUFFIX=$(uname -s | tr '[:upper:]' '[:lower:]')-$(uname -m)
          
          for item in kcn kpn ken kcn-kairos kpn-kairos ken-kairos kgen kscn kbn kspn ksen homi; do
            BINARY=$item
            KAIROS=""
            if [[ $BINARY = *-kairos ]]; then
              BINARY="${BINARY%-kairos}"
              KAIROS="-kairos"
            fi
            TARGET_RPM=$(find $BINARY-$PLATFORM_SUFFIX/rpmbuild/RPMS/$(uname -m)/ | awk -v pat="$BINARY(d)?$KAIROS-v" '$0~pat')
            aws s3 cp $TARGET_RPM s3://$FRONTEND_BUCKET/packages/rhel/7/kaia/
            aws s3 cp $TARGET_RPM s3://$FRONTEND_BUCKET/packages/kaia/$KAIA_VERSION/
          done

  tar-linux-amd64:
    runs-on: ubuntu-latest
    container:
      image: kaiachain/build_base:go1.23.7-solc0.8.13-ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
      
      - name: Set version
        run: |
          if [[ $GITHUB_REF_NAME =~ ^v[0-9]+\.[0-9]+\.[0-9]+-rc\.[0-9]+.* ]]; then
            rc_num=$(echo $GITHUB_REF_NAME | cut -d '-' -f 2)
            sed 's/%d.%d.%d/%d.%d.%d~'$rc_num'/' params/version.go > params/version.go.tmp
            mv params/version.go.tmp params/version.go
          fi
          echo "KAIA_VERSION=$(go run build/rpm/main.go version)" >> $GITHUB_ENV

      - name: Build binaries
        run: |
          git config --global --add safe.directory /__w/kaia/kaia
          make all

      - name: Build tar packages
        run: |
          for item in kcn kpn ken kgen kscn kbn kspn ksen homi; do
            ./build/package-tar.sh linux-amd64 $item
          done
          
          for item in kcn kpn ken; do
            ./build/package-tar.sh -b linux-amd64 $item
          done

      - name: Upload tar packages to S3
        run: |
          for item in kcn kpn ken kcn-kairos kpn-kairos ken-kairos kgen kscn kbn kspn ksen homi; do
            aws s3 cp packages/${item}-v*.tar.gz s3://$FRONTEND_BUCKET/packages/kaia/$KAIA_VERSION/
          done

  rpm-linux-arm64:
    runs-on: ['arm-runner']
    container:
      image: kaiachain/circleci-rpmbuild:1.23.7-gcc11-arm
    steps:
      - uses: actions/checkout@v4

      - name: Set version
        run: |
          export GOPATH=/go
          if [[ $GITHUB_REF_NAME =~ ^v[0-9]+\.[0-9]+\.[0-9]+-rc\.[0-9]+.* ]]; then
            rc_num=$(echo $GITHUB_REF_NAME | cut -d '-' -f 2)
            sed 's/%d.%d.%d/%d.%d.%d~'$rc_num'/' params/version.go > params/version.go.tmp
            mv params/version.go.tmp params/version.go
          fi
          echo "KAIA_VERSION=$(go run build/rpm/main.go version)" >> $GITHUB_ENV

      - name: Build binaries
        run: |
          git config --global --add safe.directory /__w/kaia/kaia
          make all

      - name: Build RPM packages
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git config --system --add safe.directory $GITHUB_WORKSPACE
          for item in kcn kpn ken kgen kscn kbn kspn ksen homi; do
            ./build/package-rpm.sh $item
          done
          
          for item in kcn kpn ken; do
            ./build/package-rpm.sh -b $item
          done

      - name: Upload RPM packages to S3
        run: |
          PLATFORM_SUFFIX=$(uname -s | tr '[:upper:]' '[:lower:]')-$(uname -m)
          
          for item in kcn kpn ken kcn-kairos kpn-kairos ken-kairos kgen kscn kbn kspn ksen homi; do
            BINARY=$item
            KAIROS=""
            if [[ $BINARY = *-kairos ]]; then
              BINARY="${BINARY%-kairos}"
              KAIROS="-kairos"
            fi
            TARGET_RPM=$(find $BINARY-$PLATFORM_SUFFIX/rpmbuild/RPMS/$(uname -m)/ | awk -v pat="$BINARY(d)?$KAIROS-v" '$0~pat')
            aws s3 cp $TARGET_RPM s3://$FRONTEND_BUCKET/packages/rhel/7/kaia/
            aws s3 cp $TARGET_RPM s3://$FRONTEND_BUCKET/packages/kaia/$KAIA_VERSION/
          done

  tar-linux-arm64:
    runs-on: ['arm-runner']
    container:
      image: kaiachain/build_base:go1.23.7-solc0.8.13-ubuntu-22.04-arm
    steps:
      - uses: actions/checkout@v4

      - name: Set version
        run: |
          if [[ $GITHUB_REF_NAME =~ ^v[0-9]+\.[0-9]+\.[0-9]+-rc\.[0-9]+.* ]]; then
            rc_num=$(echo $GITHUB_REF_NAME | cut -d '-' -f 2)
            sed 's/%d.%d.%d/%d.%d.%d~'$rc_num'/' params/version.go > params/version.go.tmp
            mv params/version.go.tmp params/version.go
          fi
          echo "KAIA_VERSION=$(go run build/rpm/main.go version)" >> $GITHUB_ENV

      - name: Build binaries
        run: |
          git config --global --add safe.directory /__w/kaia/kaia
          make all

      - name: Build tar packages
        run: |
          for item in kcn kpn ken kgen kscn kbn kspn ksen homi; do
            ./build/package-tar.sh linux-arm64 $item
          done
          
          for item in kcn kpn ken; do
            ./build/package-tar.sh -b linux-arm64 $item
          done

      - name: Upload tar packages to S3
        run: |
          for item in kcn kpn ken kcn-kairos kpn-kairos ken-kairos kgen kscn kbn kspn ksen homi; do
            aws s3 cp packages/${item}-v*.tar.gz s3://$FRONTEND_BUCKET/packages/kaia/$KAIA_VERSION/
          done

  deploy-rpm:
    needs: [rpm-linux-amd64, tar-linux-amd64, tar-linux-arm64, rpm-linux-arm64]
    runs-on: ubuntu-latest
    container:
      image: kaiachain/circleci-rpmbuild:1.22.1-gcc7

    steps:
      - name: Update RPM repository
        run: |
          aws s3 sync s3://$FRONTEND_BUCKET/packages/rhel/7/kaia/ rhel/7/kaia/
          createrepo --update rhel/7/kaia
          aws s3 sync --delete rhel/7/kaia/repodata/ s3://$FRONTEND_BUCKET/packages/rhel/7/kaia/repodata/

      - name: Notify Slack on success
        if: success()
        run: |
          curl --data '{"text": "✅ Package deployment succeeded for ${{ github.ref_name }}. See ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"}' "$SLACK_WEBHOOK_URL"

      - name: Notify Slack on failure
        if: failure()
        run: |
          curl --data '{"text": "❌ Package deployment failed for ${{ github.ref_name }}. See ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"}' "$SLACK_WEBHOOK_URL" 